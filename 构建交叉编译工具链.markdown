## 构建交叉编译工具链

*2016-06-23*

    #! /bin/sh
    
    #------------------------------------------------------------------------------
    # Copyright (C) 2016.6.23 Jinfeng Zhuang
    # All rights reserved.
    #------------------------------------------------------------------------------
    
    #------------------------------------------------------------------------------
    # 文档声明：
    # 本文档不再更新，作为构建交叉工具链的初期脚本，仅具有纪念意义。
    
    #------------------------------------------------------------------------------
    # 最新脚本源码请转：https://github.com/kavin-zhuang/cross-compiler
    
    #------------------------------------------------------------------------------
    # CHANGELOG
    # enter VIM, execute ":%s/\\r//g" to delete '\r'
    
    #------------------------------------------------------------------------------
    # 需要改进的部分
    # 1. 执行最后一步：构建完整的GCC会失败，原因未知，重新只执行最后一步即可。
    # 2. 一些WARNING会输出到终端上
    
    
    echo -e "Starting...\n"
    
    #------------------------------------------------------------------------------
    # FOR DEBUG
    
    BUILD_PREPARE=true
    BUILD_DOWNLOAD=true
    BUILD_LINUX_HEADER=true
    BUILD_BINUTILS=true
    BUILD_GCC_OF_C=true
    BUILD_GLIBC=true
    BUILD_GCC_FULL=true
    
    #------------------------------------------------------------------------------
    # Global Setting
    # should check the core num.
    
    #------------------------------------------------------------------------------
    # 设置临时的环境变量
    # 注意：这些环境变量只在该脚本中起作用
    # 请修改路径
    
    export WORKSPACE="/home/jinfeng/test"
    
    export TARGET="arm-none-linux-gnueabi"
    export PREFIX="$WORKSPACE/build"
    export TARGET_PREFIX="$PREFIX/$TARGET"
    export PATH="$PATH:$PREFIX/bin"
    
    #------------------------------------------------------------------------------
    # Make dir
    
    if [ $BUILD_PREPARE ]; then
    
      echo -e "prepare... "
    
      mkdir source
      mkdir build
    
      echo -e "done\n"
    fi
    
    #------------------------------------------------------------------------------
    # DOWNLOAD
    
    if [ $BUILD_DOWNLOAD ]; then
    
      echo -e "downloading... "
    
      cd $WORKSPACE
      wget ftp://172.18.0.74/ntesec/armteam/custom-cross-tool/download/* -nd -P download
    
      echo -e "done\n"
    
    fi
    
    #------------------------------------------------------------------------------
    # Build Linux Headers
    
    # ERROR HERE, WHILE build GLIBC
    
    if [ $BUILD_LINUX_HEADER ]; then
    
      echo -e "build linux headers... "
    
      cd $WORKSPACE
      tar -xvf ./download/linux-2.6.34.14.tar.xz --directory=./source > /dev/null
      cd ./source/linux-2.6.34.14
      make ARCH=arm INSTALL_HDR_PATH=$TARGET_PREFIX headers_install  > /dev/null
    
      echo -e "done\n"
    
    fi
    
    #------------------------------------------------------------------------------
    # Build Binutils
    
    if [ $BUILD_BINUTILS ]; then
    
      echo -e "build binutils... "
    
      cd $WORKSPACE
      tar -xvf ./download/binutils-2.23.1.tar.bz2 --directory=./source > /dev/null
      cd source/binutils-2.23.1
      mkdir build
      cd build
      ../configure --prefix=$PREFIX --target=$TARGET > /dev/null
      make -j4 > /dev/null
      make install > /dev/null
    
      echo -e "done\n"
    fi
    
    #------------------------------------------------------------------------------
    # 构建 GCC(JUST C Language)
    
    if [ $BUILD_GCC_OF_C ]; then
    
      echo -e "build gcc of C language... "
    
      cd $WORKSPACE
      tar -xvf ./download/gcc-4.8.2.tar.bz2 --directory=./source > /dev/null
      mkdir ./source/gcc-4.8.2/gmp
      tar -xvf ./download/gmp-5.1.3.tar.bz2 --directory=./source/gcc-4.8.2/gmp  --strip-components 1  > /dev/null
      mkdir ./source/gcc-4.8.2/mpc
      tar -xvf ./download/mpc-1.0.1.tar.gz --directory=./source/gcc-4.8.2/mpc  --strip-components 1  > /dev/null
      mkdir ./source/gcc-4.8.2/mpfr
      tar -xvf ./download/mpfr-3.1.2.tar.bz2 --directory=./source/gcc-4.8.2/mpfr  --strip-components 1  > /dev/null
    
      cd source/gcc-4.8.2
      mkdir build
      cd build
      ../configure --prefix=$PREFIX --target=$TARGET --without-headers --enable-languages=c --disable-threads --with-newlib --disable-shared --disable-libmudflap --disable-libssp --disable-decimal-float > /dev/null
    
      make -j4 all-gcc  > /dev/null
      make install-gcc  > /dev/null
    
      make -j4 all-target-libgcc  > /dev/null
      make install-target-libgcc  > /dev/null
    
      echo -e "done\n"
    fi
    
    #------------------------------------------------------------------------------
    # 构建 GLIBC with GCC(JUST with C support)
    
    if [ $BUILD_GLIBC ]; then
    
      echo -e "build glibc with arm-none-linux-gnueabi... "
    
      export CC="$TARGET-gcc"
    
      cd $WORKSPACE
    
      tar -jxvf ./download/glibc-2.18.tar.bz2 --directory=./source > /dev/null
      tar -jxvf ./download/glibc-linuxthreads-2.5.tar.bz2 --directory=./source/glibc-2.18 > /dev/null
    
      # to make the script debug easy
      if [ ! -f "$PREFIX/lib/gcc/arm-none-linux-gnueabi/4.8.2/libgcc_eh.a" ]; then
          ln -s $PREFIX/lib/gcc/arm-none-linux-gnueabi/4.8.2/libgcc.a $PREFIX/lib/gcc/arm-none-linux-gnueabi/4.8.2/libgcc_eh.a
      fi
    
      cd source/glibc-2.18
    
      mkdir build
      cd build
    
      echo "libc_cv_forced_unwind=yes" > config.cache
      echo "libc_cv_c_cleanup=yes" >> config.cache
      echo "libc_cv_arm_tls=yes" >> config.cache
    
      ../configure --host=$TARGET --target=$TARGET --prefix=$TARGET_PREFIX --enable-add-ons --disable-profile --cache-file=config.cache --with-binutils=$PREFIX/bin --with-headers=$TARGET_PREFIX/include > /dev/null
    
      make -j4 all > /dev/null
      make install > /dev/null
    
      echo -e "done\n"
    fi
    
    #------------------------------------------------------------------------------
    # 构建 GCC(FULL)
    # 出错请单独执行这个步骤即可。
    
    if [ $BUILD_GCC_FULL ]; then
    
      echo -e "build full gcc... "
    
      cd $WORKSPACE
    
      # make sure this folder exist, or cause the parent folder deleted!!!
      if [ ! -d "source/gcc-4.8.2/build" ]; then
          exit 1;
      fi
    
      cd source/gcc-4.8.2/build
      rm -rf *
    
      ../configure --prefix=$PREFIX --target=$TARGET --enable-shared --enable-languages=c,c++ > /dev/null
    
      make -j4 > /dev/null
      make install > /dev/null
    
      echo -e "done\n"
    fi
